// Code generated by ent, DO NOT EDIT.

package stoprequest

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the stoprequest type in the database.
	Label = "stop_request"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRecipient holds the string denoting the recipient field in the database.
	FieldRecipient = "recipient"
	// FieldStopDate holds the string denoting the stop_date field in the database.
	FieldStopDate = "stop_date"
	// Table holds the table name of the stoprequest in the database.
	Table = "stop_requests"
)

// Columns holds all SQL columns for stoprequest fields.
var Columns = []string{
	FieldID,
	FieldRecipient,
	FieldStopDate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultStopDate holds the default value on creation for the "stop_date" field.
	DefaultStopDate time.Time
)

// OrderOption defines the ordering options for the StopRequest queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByRecipient orders the results by the recipient field.
func ByRecipient(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRecipient, opts...).ToFunc()
}

// ByStopDate orders the results by the stop_date field.
func ByStopDate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStopDate, opts...).ToFunc()
}
